dofile(appendUserDataPath("_mods/fg_scrnsav/scripts/inc_compat.lua"))dofile("scripts/inc_flags.lua")dofile("scripts/inc_util.lua")local ALPHA_TIME_IN = 0.4local ALPHA_TIME_OUT = 0.4local STATE_CLICKED = 1337 -- must match value in logic_ui.luav.enabled = falsev.x = 0v.y = 0v.maxalpha = 1v.inited = falsev.scale = 1v.shouldEnable = falsev.light = 0v.lightsize = 0v.recv = 0function init(me, tex, scale, x, y, a)	setupEntity(me, "missingimage")	entity_setEntityType(me, ET_NEUTRAL)    entity_setState(me, STATE_IDLE)    entity_setUpdateCull(me, -1)    esetv(me, EV_LOOKAT, 0)    entity_setAllDamageTargets(me, false)    entity_setActivation(me, AT_NONE, 40, 512)    entity_setSpiritFreeze(me, false) -- keep updating        if tex then        entity_setTexture(me, tex)    end		if scale then        entity_scale(me, scale, scale)    end        if x then        v.x = x    end        if y then        v.y = y    end        if a then        v.maxalpha = a    end        entity_setActivation(me, AT_CLICK, 64, 99999)endfunction postInit(me)endfunction v.enable(me)    if not v.enabled then        entity_alpha(me, v.maxalpha, ALPHA_TIME_IN)        entity_setActivationType(me, AT_CLICK)        v.enabled = true        if v.lightsize > 0 then            v.light = createQuad("Naija/LightFormGlow", 13)            quad_scale(v.light, v.lightsize, v.lightsize)        end    endendfunction v.disable(me)    if v.enabled then        entity_alpha(me, 0, ALPHA_TIME_OUT)        entity_setActivationType(me, AT_NONE)        v.enabled = false        if v.light ~= 0 then            quad_scale(v.light, 0, 0, 0.4)            quad_delete(v.light, 0.4)            v.light = 0        end    endendlocal function canEnable()    --return isForm(FORM_NORMAL) and avatar_getStillTimer() > 0.3    return v.shouldEnableendfunction update(me, dt)    if v.inited then        local x, y = v.toWorldFromWindow(v.x, v.y)        entity_setPosition(me, x, y)                if v.enabled then            local invzoom = 1 / v.getZoom()            local sc = invzoom * v.scale            entity_scale(me, sc, sc)            if v.light ~= 0 then                sc = invzoom * v.lightsize                quad_setPosition(v.light, x, y)                quad_scale(v.light, sc, sc)            end        end                        if canEnable() then            v.enable(me)        else            v.disable(me)        end                    endendfunction msg(me, s, x)    if v.recv ~= 0 then        if     v.recv == "tex" then entity_setTexture(me, s)        elseif v.recv == "scale" then v.scale = tonumber(s)         elseif v.recv == "x" then v.x = tonumber(s)        elseif v.recv == "y" then v.y = tonumber(s)        elseif v.recv == "a" then v.maxalpha = tonumber(s)        elseif v.recv == "light" then v.lightsize = tonumber(s)        end        --debugLog("guielem val [" .. v.recv .. "] set to " .. s)        v.recv = 0    else        if s == "initdone" then            v.inited = true            if canEnable() then                v.enable(me)            else                entity_alpha(me, 0)            end            --debugLog("guielem init done")        elseif s == "show" then            v.shouldEnable = true        elseif s == "hide" then            v.shouldEnable = false        else            v.recv = s        end    endendfunction damage(me, attacker, bone, damageType, dmg)	return falseendfunction activate(me)    entity_setState(me, STATE_CLICKED)    playSfx("click")    -- logic_ui will detect this and reset the state back to idle        local ns = v.scale * 1.4    entity_scale(me, ns, ns)    entity_scale(me, v.scale, v.scale, 0.3)endfunction animationKey(me, key)endfunction enterState(me)end function exitState(me)endfunction hitSurface(me)endfunction songNote(me, note)endfunction songNoteDone(me, note)endfunction song(me, song)endfunction shiftWorlds(me, old, new)end